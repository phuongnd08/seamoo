<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.seamoo</groupId>
		<artifactId>seamoo-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<groupId>org.seamoo</groupId>
	<artifactId>seamoo-webapp</artifactId>
	<version>1.0-SNAPSHOT</version>

	<name>Seamoo Web Application</name>
	<description>Web Application Interface Of SeaMoo Project</description>
	<packaging>war</packaging>

	<dependencies>

		<!--
			jars from GAE's "lib/user" must be added as compile-time
			dependencies, as described here in "Copying JARs" section:
			http://code.google.com/appengine/docs/java/tools/ant.html
		-->

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<scope>compile</scope>
		</dependency>

		<!-- 
          GWT dependencies
        -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>

		<!--
			J2EE Servlet API. We need it to compile IndexServlet class. You can
			probably remove it, if you don't explicitly use Servlets
		-->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- These dependencies are here just for enabling logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.6</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.15</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-portlet</artifactId>
		</dependency>
		<!--
			Fix for tiles: add jasper-el to support the use expression in tiles
			configuration
		-->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>jasper-el</artifactId>
		</dependency>

		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<classifier>gae-pre2</classifier>
		</dependency>

		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.seamoo.utils</groupId>
			<artifactId>converter</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<classifier>jdk15</classifier>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<scope>test</scope>
		</dependency>

		<!--		<dependency>-->
		<!--			<groupId>rhino</groupId>-->
		<!--			<artifactId>js</artifactId>-->
		<!--			<version>1.7R2</version>-->
		<!--		</dependency>-->

		<dependency>
			<groupId>org.jbehave</groupId>
			<artifactId>jbehave-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock.modules</groupId>
			<artifactId>powermock-module-testng</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock.api</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>seamoo-gwt-bridge</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium.client-drivers</groupId>
			<artifactId>selenium-java-testng-helper</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>com.dyuproject</groupId>
			<artifactId>dyuproject-util</artifactId>
		</dependency>

		<dependency>
			<groupId>com.dyuproject</groupId>
			<artifactId>dyuproject-openid</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openid4java</groupId>
			<artifactId>openid4java-consumer</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-util</artifactId>
		</dependency>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>seamoo-model</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>seamoo-persistence</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>seamoo-theme</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>seamoo-competition</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>seamoo-test-resources</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-incubator</artifactId>
			<version>${gwt.incubator.version}</version>
		</dependency>
		<dependency>
			<groupId>gwt.log</groupId>
			<artifactId>gwt-log</artifactId>
			<version>${gwt.log.version}</version>
		</dependency>
	</dependencies>

	<build>
		<outputDirectory>war/WEB-INF/classes</outputDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<forkMode>once</forkMode>
					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/testng-unit-test.xml
						</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-alpha-2</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/appengine-web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!--
				Maven GWT plugin (ex.
				http://gwt-maven.googlecode.com/svn/docs/maven-googlewebtoolkit2-plugin/index.html)
				http://mojo.codehaus.org/gwt-maven-plugin
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<!--							<goal>generateAsync</goal>-->
							<!--							<goal>test</goal>-->

						</goals>
						<configuration>
							<modules>
								<module>${gwt.modules.admin}</module>
								<module>${gwt.modules.user}</module>
							</modules>
						</configuration>
					</execution>
				</executions>
				<configuration>

					<!-- match -Dgae.port -->
					<port>${gae.port}</port>
					<debugPort>${gae.debugPort}</debugPort>

					<!-- This is for generating Asynch interfaces -->
					<!-- <servicePattern>**/client/*Service.java</servicePattern> -->

					<extraJvmArgs>-Xmx512m</extraJvmArgs>
					<!--<jvm>${JAVA_HOME}/bin/java</jvm>-->
					<!--<noServer>false</noServer>-->

					<!--
						TODO This should help running GAE stuff in hosted mode (when
						gwt-maven-plugin-1.2 is released, see
						http://jira.codehaus.org/browse/MGWT-112)
					-->
					<server>com.google.appengine.tools.development.gwt.AppEngineLauncher
					</server>

					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
					<!--
						this parameter is VERY important with automatic mode - has to
						match the version in your declared deps
					-->
					<!--
						if this is set incorrect (not a match), or left out (default is
						1.5.2 for 2.0-beta23) you will have mysterious errors
					-->
					<gwtVersion>${gwt.version}</gwtVersion>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.seamoo.plugins</groupId>
				<artifactId>maven-gaeForTest-plugin</artifactId>
				<version>1.0-SNAPSHOT</version>
				<executions>
					<execution>
						<id>runAsync</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>runAsync</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<id>check-gwt-compiler-settings</id>
						<phase>process-resources</phase>
						<configuration>
							<tasks>
								<echo>Admin module = ${gwt.modules.admin}</echo>
								<echo>User module = ${gwt.modules.user}</echo>
								<echo>leagues.english.eggs.id = ${leagues.english.eggs.id}</echo>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<skipTests>true</skipTests>
					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/testng-integration-test.xml
						</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>

				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!--
				The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn
				gae:deploy" to upload to GAE.
			-->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<configuration>
					<disableUpdateCheck>false</disableUpdateCheck>
				</configuration>
			</plugin>

			<!--
				Upload application to the appspot automatically, during
				release:perform
			-->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

			<!-- Java compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start-server</goal>
						</goals>
						<configuration>
							<background>true</background>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<!-- Specify hard-coded project properties here -->
	<properties>
		<!--
			Upload to http://0.latest.<applicationName>.appspot.com by default
		-->
		<gae.application.version>2</gae.application.version>

		<!-- port defaults to 8888 -->
		<gae.port>8888</gae.port>
		<gae.testPort>8888</gae.testPort>
		<gae.debugPort>8000</gae.debugPort>

		<!--
			Produce detailed JS during GWT compilation for development
			environment
		-->
		<gwt.style>DETAILED</gwt.style>
		<gwt.logLevel>ALL</gwt.logLevel>

		<leagues.english.eggs.id>4</leagues.english.eggs.id>
		<!-- Normally, only produce js for Firefox -->
		<gwt.modules.admin>org.seamoo.webapp.client.AdminFirefox
		</gwt.modules.admin>
		<gwt.modules.user>org.seamoo.webapp.client.UserFirefox
		</gwt.modules.user>
	</properties>

	<profiles>

		<!--
			We can configure our integration server to activate this profile and
			perform gae:deploy, thus uploading latest snapshot to the
			http://1.latest.<applicationName>.appspot.com automatically
		-->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>1</gae.application.version>

				<!-- Produce pretty JS during GWT compilation for test environment -->
				<gwt.style>PRETTY</gwt.style>
				<gwt.logLevel>ALL</gwt.logLevel>
			</properties>
		</profile>

		<!--
			This profile will activate automatically during release and upload
			application to the http://2.latest.<applicationName>.appspot.com (We
			might want to set the 2nd version as our applications Default version
			to be accessible at http://<applicationName>.appspot.com)
		-->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<!--
					During release, set application version in appengine-web.xml to
					alpha-3
				-->
				<gae.application.version>alpha-4</gae.application.version>

				<!--
					Produce compressed JS during GWT compilation for production
					environment
				-->
				<gwt.style>OBFUSCATED</gwt.style>
				<gwt.logLevel>ERROR</gwt.logLevel>
				<leagues.english.eggs.id>78001</leagues.english.eggs.id>
				<!-- On release, produce js for many browsers -->
				<gwt.modules.admin>org.seamoo.webapp.client.Admin
				</gwt.modules.admin>
				<gwt.modules.user>org.seamoo.webapp.client.User</gwt.modules.user>
			</properties>
		</profile>
		<profile>
			<id>ant-target</id>
			<build>
				<defaultGoal>antrun:run</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>

						<configuration>
							<tasks>
								<property name="gae.port" value="${gae.port}" />
								<property name="gae.debugPort" value="${gae.debugPort}" />
								<property name="webapp.dir"
									value="${project.build.directory}/${project.build.finalName}" />

								<ant antfile="${basedir}/gwt.xml" inheritRefs="true"
									inheritAll="true">
									<target name="${target}" />
								</ant>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>ant-contrib</groupId>
					<artifactId>ant-contrib</artifactId>
					<version>1.0b2</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>

